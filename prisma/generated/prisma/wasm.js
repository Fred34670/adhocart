
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ArchivageScalarFieldEnum = {
  id: 'id',
  nom_archivage: 'nom_archivage'
};

exports.Prisma.ArticleScalarFieldEnum = {
  id: 'id',
  archivage_id: 'archivage_id',
  categorie_id: 'categorie_id',
  nom_auteur: 'nom_auteur',
  prenom_auteur: 'prenom_auteur',
  titre: 'titre',
  illustrations: 'illustrations',
  editeur: 'editeur',
  date_impression: 'date_impression',
  nombre_pages: 'nombre_pages',
  description: 'description',
  prix_achat: 'prix_achat',
  valeur_marche_min: 'valeur_marche_min',
  prix_vente_internet: 'prix_vente_internet',
  quantite_volume: 'quantite_volume',
  poids_net_kg: 'poids_net_kg',
  frais_postaux: 'frais_postaux',
  date_creation: 'date_creation',
  date_vente: 'date_vente',
  nom_complet: 'nom_complet',
  pseudo_titre: 'pseudo_titre',
  collection: 'collection',
  justification: 'justification',
  date_EO: 'date_EO',
  estimation: 'estimation',
  prix_reserve: 'prix_reserve',
  disponible: 'disponible',
  envoi_possible: 'envoi_possible',
  edition_papier_id: 'edition_papier_id',
  id_utilisateur: 'id_utilisateur'
};

exports.Prisma.Article_themeScalarFieldEnum = {
  article_id: 'article_id',
  theme_id: 'theme_id'
};

exports.Prisma.CategorieScalarFieldEnum = {
  id: 'id',
  nom_categorie: 'nom_categorie',
  image_url: 'image_url',
  image_entete_url: 'image_entete_url',
  description: 'description'
};

exports.Prisma.Categorie_themeScalarFieldEnum = {
  categorie_id: 'categorie_id',
  theme_id: 'theme_id'
};

exports.Prisma.Edition_papierScalarFieldEnum = {
  id: 'id',
  libelle_edition_papier: 'libelle_edition_papier'
};

exports.Prisma.FavorisScalarFieldEnum = {
  utilisateur_id: 'utilisateur_id',
  article_id: 'article_id'
};

exports.Prisma.PhotosScalarFieldEnum = {
  id: 'id',
  article_id: 'article_id',
  libelle_photo: 'libelle_photo',
  url_photo: 'url_photo',
  a_la_une: 'a_la_une'
};

exports.Prisma.ThemeScalarFieldEnum = {
  id: 'id',
  libelle_theme: 'libelle_theme'
};

exports.Prisma.Type_utilisateurScalarFieldEnum = {
  id: 'id',
  nom_type_utilisateur: 'nom_type_utilisateur'
};

exports.Prisma.UtilisateurScalarFieldEnum = {
  id: 'id',
  type_utilisateur_id: 'type_utilisateur_id',
  email: 'email',
  nom: 'nom',
  prenom: 'prenom',
  password: 'password',
  adresse: 'adresse',
  code_postal: 'code_postal',
  ville: 'ville',
  telephone: 'telephone',
  role: 'role',
  passwordResetToken: 'passwordResetToken',
  passwordResetExpires: 'passwordResetExpires'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  articleId: 'articleId',
  userId: 'userId',
  guestName: 'guestName',
  guestEmail: 'guestEmail',
  guestToken: 'guestToken',
  isClosed: 'isClosed',
  isReadByAdmin: 'isReadByAdmin',
  isReadByUser: 'isReadByUser',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  senderIsAdmin: 'senderIsAdmin',
  content: 'content',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Choix = exports.$Enums.Choix = {
  Oui: 'Oui',
  Non: 'Non'
};

exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  archivage: 'archivage',
  article: 'article',
  article_theme: 'article_theme',
  categorie: 'categorie',
  categorie_theme: 'categorie_theme',
  edition_papier: 'edition_papier',
  favoris: 'favoris',
  photos: 'photos',
  theme: 'theme',
  type_utilisateur: 'type_utilisateur',
  utilisateur: 'utilisateur',
  Conversation: 'Conversation',
  Message: 'Message'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
